@model IEnumerable<webgk.Models.DonHang>

@{
    ViewData["Title"] = "Danh sách đơn hàng";
}

<h2>Danh sách đơn hàng</h2>

@if (!Model.Any())
{
    <p>Không có đơn hàng nào.</p>
}
else
{
    <div class="container-fluid pt-4 px-4">
        <div class="row g-4">
            <div class="col-sm-6 col-xl-3">
                <div class="bg-light rounded d-flex align-items-center justify-content-between p-4">
                    <i class="fa fa-chart-line fa-3x text-primary"></i>
                    <div class="ms-3">
                        <p class="mb-2">Bán hàng hôm nay</p>
                        <h6 class="mb-0">@ViewBag.TodaySales</h6>
                    </div>
                </div>
            </div>
            <div class="col-sm-6 col-xl-3">
                <div class="bg-light rounded d-flex align-items-center justify-content-between p-4">
                    <i class="fa fa-chart-bar fa-3x text-primary"></i>
                    <div class="ms-3">
                        <p class="mb-2">Tổng số đơn hàng</p>
                        <h6 class="mb-0">@ViewBag.TotalOrders</h6>
                    </div>
                </div>
            </div>
            <div class="col-sm-6 col-xl-3">
                <div class="bg-light rounded d-flex align-items-center justify-content-between p-4">
                    <i class="fa fa-chart-area fa-3x text-primary"></i>
                    <div class="ms-3">
                        <p class="mb-2">Doanh thu hôm nay</p>
                        <h6 class="mb-0">@ViewBag.TodayRevenue.ToString("C")</h6>
                    </div>
                </div>
            </div>
            <div class="col-sm-6 col-xl-3">
                <div class="bg-light rounded d-flex align-items-center justify-content-between p-4">
                    <i class="fa fa-chart-pie fa-3x text-primary"></i>
                    <div class="ms-3">
                        <p class="mb-2">Tổng doanh thu</p>
                        <h6 class="mb-0">@ViewBag.TotalRevenue.ToString("C")</h6>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="container-fluid pt-4 px-4">
        <div class="bg-light text-center rounded p-4">
            <div class="d-flex align-items-center justify-content-between mb-4">
                <h6 class="mb-0">Đơn hàng gần đây</h6>
                <form class="input-group" onsubmit="event.preventDefault(); searchOrders();">
                    <input type="text" id="searchInput" class="form-control" placeholder="Tìm kiếm đơn hàng...">
                    <div class="input-group-append">
                        <button class="btn btn-primary" type="submit">Tìm kiếm</button>
                    </div>
                </form>
            </div>
            <div class="table-responsive">
                <table class="table text-start align-middle table-bordered table-hover mb-0" id="ordersTable">
                    <thead>
                        <tr class="text-dark">
                            <th scope="col" onclick="sortTable('NgayBan')">Ngày bán</th>
                            <th scope="col" onclick="sortTable('MaDon')">Mã đơn</th>
                            <th scope="col" onclick="sortTable('MaKhach')">Mã khách hàng</th>
                            <th scope="col" onclick="sortTable('TongTien')">Tổng tiền</th>
                            <th scope="col">Trạng thái</th>
                            <th scope="col">Thao tác</th>
                        </tr>
                    </thead>
                    <tbody id="ordersBody">
                        @if (Model != null && Model.Count() > 0)
                        {
                            foreach (var item in Model)
                            {
                                <tr>
                                    <td data-field="NgayBan">@item.NgayBan.ToString("dd MMM yyyy")</td>
                                    <td data-field="MaDon">@item.MaDon</td>
                                    <td data-field="MaKhach">@item.MaKhach</td>
                                    <td data-field="TongTien">@item.TongTien.ToString()</td>
                                    <td data-field="TrangThaiDH">@item.TrangThaiDH</td>
                                    <td>
                                        <button class="btn btn-info btn-sm" onclick="viewDetail(@item.MaDon)">Chi tiết</button>
                                        <button class="btn btn-danger btn-sm" onclick="deleteDonHang(@item.MaDon)">Xóa</button>
                                    </td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="6" class="text-center">Không có đơn hàng nào</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
}

<script>
    let sortType = {};

    function searchOrders() {
        var input, filter, table, tr, td, i, j, txtValue;
        input = document.getElementById("searchInput");
        filter = input.value.toUpperCase();
        table = document.getElementById("ordersTable");
        tr = table.getElementsByTagName("tr");

        for (i = 1; i < tr.length; i++) {
            tr[i].style.display = "none";
            td = tr[i].getElementsByTagName("td");
            for (j = 0; j < td.length; j++) {
                if (td[j]) {
                    txtValue = td[j].textContent || td[j].innerText;
                    if (txtValue.toUpperCase().indexOf(filter) > -1) {
                        tr[i].style.display = "";
                        break;
                    }
                }
            }
        }
    }

    function sortTable(sortField) {
        const table = document.getElementById('ordersTable');
        const rows = Array.from(table.rows).slice(1); // Bỏ qua hàng tiêu đề
        const isNumeric = !isNaN(rows[0].querySelector(`[data-field="${sortField}"]`).innerText);

        // Đặt kiểu sắp xếp mặc định nếu chưa có
        if (!sortType[sortField]) {
            sortType[sortField] = 'asc';
        }

        rows.sort((a, b) => {
            const aField = a.querySelector(`[data-field="${sortField}"]`).innerText.toLowerCase();
            const bField = b.querySelector(`[data-field="${sortField}"]`).innerText.toLowerCase();

            if (isNumeric) {
                return sortType[sortField] === 'asc' ? aField - bField : bField - aField;
            }

            if (sortType[sortField] === 'asc') {
                return aField.localeCompare(bField);
            } else {
                return bField.localeCompare(aField);
            }
        });

        // Chuyển đổi kiểu sắp xếp cho lần sắp xếp tiếp theo
        sortType[sortField] = sortType[sortField] === 'asc' ? 'des' : 'asc';

        const tbody = table.querySelector('tbody');
        rows.forEach(row => tbody.appendChild(row));
    }

    function viewDetail(id) {
        window.location.href = `/DonHang/Details/${id}`;
    }

    function deleteDonHang(id) {
        if (confirm('Bạn có chắc chắn muốn xóa đơn hàng này?')) {
            fetch(`/api/DonHangApi/${id}`, {
                method: 'DELETE',
                headers: {
                    'Content-Type': 'application/json'
                }
            })
                .then(response => {
                    if (response.ok) {
                        alert('Đơn hàng đã được xóa thành công!');
                        window.location.reload();
                    } else {
                        alert('Không thể xóa đơn hàng này.');
                    }
                })
                .catch((error) => {
                    console.error('Error:', error);
                });
        }
    }
</script>
